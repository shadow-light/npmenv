
os: linux
dist: xenial
language: python


# OSX doesn't support diff python versions yet so must manually install
# NOTE Using TRAVIS_PYTHON_VERSION so same variable name when used in `script`
matrix:
    include:
        # Test oldest and newest Python versions that are supported
        - {python: '3.6'}
        - {python: '3.7', sudo: true}  # 3.7 requires sudo for some reason
        - {python: '3.7', sudo: true, env: 'UPDATE="y"'}  # Latest python with latest deps
        - {os: osx, language: generic, env: 'TRAVIS_PYTHON_VERSION="3.6"'}
        - {os: osx, language: generic, env: 'TRAVIS_PYTHON_VERSION="3.7"'}
        - {os: osx, language: generic, env: 'TRAVIS_PYTHON_VERSION="3.7" UPDATE="y"'}


before_install: |
    # Need pipenv for install
    python -m pip install pipenv

    # OSX specific requirements
    if test $TRAVIS_OS_NAME == osx; then

        # Upgrade npm as Travis' version doesn't support lock files
        sudo npm install --global npm

        # Upgrade pyenv for Python 3.7 as installed version doesn't know about it
        if test $TRAVIS_PYTHON_VERSION == "3.7"; then
            brew upgrade pyenv
        fi

        # Form version with patch number (pyenv requires all three parts)
        PYENV_VERSION="$TRAVIS_PYTHON_VERSION.0"

        # Install required version of Python
        pyenv install $PYENV_VERSION

        # Create env with the specific version
        # NOTE Linux build already creates a venv with correct version upon startup
        pipenv --python /Users/travis/.pyenv/versions/$PYENV_VERSION/bin/python
    fi


install: |
    test "$UPDATE" == "y" && pipenv update
    pipenv sync --dev
    pipenv graph  # For debugging's sake


script: pipenv run python dev.py test --python $TRAVIS_PYTHON_VERSION
